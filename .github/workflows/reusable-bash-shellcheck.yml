name: reusable bash shellcheck
on:
  workflow_call: {}
jobs:
  bash-shellcheck:
    name: bash-shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - id: run-info
        name: collect job run info
        run: |
          all_shell_scripts=()
          while IFS=$'\n' read -r script; do
            git check-ignore -q "$script" || all_shell_scripts+=("$script")
          done < <(grep -irl '#!.*sh' . --exclude-dir={_\*,.git\*,vendor\*})
          echo "scripts=${all_shell_scripts[@]}" >> $GITHUB_OUTPUT
      - id: shellcheck
        if: ${{ steps.run-info.outputs.scripts }}
        uses: docker://docker.io/koalaman/shellcheck-alpine:v0.9.0
        with:
          args: shellcheck --external-sources --exclude=2230 --color=auto ${{ steps.run-info.outputs.scripts }}
      - name: add comment on pull request
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        if: ${{ github.event_name == 'pull_request' && steps.shellcheck.outputs.stdout != null }}
        env:
          RESULT: "shellcheck\n${{ steps.shellcheck.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Shellcheck results
            <details><summary>Show results</summary>
            \`\`\`\

            ${process.env.RESULT}
            \`\`\`
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*
            <!-- tfmgmnt -->
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
